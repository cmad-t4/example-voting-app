pipeline{
    
    agent none
    
    stages{
        stage('build'){
		    agent{
		          docker{
		            image 'maven:3.6.1-jdk-8-slim'
		            args '-v $HOME/.m2:/root/.m2'
		          }

		    }
            steps{
                echo 'Building worker app'
                dir('worker'){
					sh 'mvn compile'
				}
            }
        }
        stage('test'){
		    agent{
		          docker{
		            image 'maven:3.6.1-jdk-8-slim'
		            args '-v $HOME/.m2:/root/.m2'
		          }

		    }
            steps{
                echo 'Running unit tests on worker app'
                dir('worker'){
					sh 'mvn clean test'
				}
            }
        }
        stage('package'){
			when { branch "master"}
		    agent{
		          docker{
		            image 'maven:3.6.1-jdk-8-slim'
		            args '-v $HOME/.m2:/root/.m2'
		          }

		    }
            steps{
                echo 'Running package worker app'
                dir('worker'){
					sh 'mvn package -DskipTests'
					archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
				}
            }
        }
		
		stage('docker-package'){
			when { branch "master"}
		          agent any
		          steps{
		            echo 'Packaging worker app with docker'
		            script{
		              docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
		                  def workerImage = docker.build("shrikanthhandadi/worker:v${env.BUILD_ID}", "./worker")
		                  workerImage.push()
		                  workerImage.push("latest")
		              }
		            }
		          }
		      }
			  
	  		stage('deploy'){
				when { branch "master"}
	  		          agent any
	  		          steps{
	  		            script{
	  		              echo 'Deploy (deliver) docker app'
						  sh 'docker-compose up -d'
	  		            }
	  		          }
	  		      }
			  
			  
    }
    
    post{
        always{
            echo 'In the post block of pipeline'
        }
        
    }
    
}
